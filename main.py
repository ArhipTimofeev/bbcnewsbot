import telebot
import pymysql
import json
import smtplib, ssl
import functions
from login_form import LoginForm
from registration_form import RegistrationForm
from email.message import EmailMessage
bot = telebot.TeleBot("6392581487:AAEGhJ8DZSugnEcU1vLUeQliiwaGePyDJms", parse_mode = "HTML")
allowReg = True 
def connectmsql():
    try:
        global conn
        conn = pymysql.connect(
            host='localhost',
            user='root',
            password='',
            database='tanks_simulator',
            connect_timeout=10,
            cursorclass=pymysql.cursors.DictCursor
        )
        return conn
    except Exception as exept:
        print("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MySQL! " + str(exept))
connectmsql()


Sellector = '-'

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(content_types=['text'])
def start(message):
    if message.text.lower() == Sellector+"–ø–æ–º–æ—â—å":
        bot.send_message(message.chat.id, f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.username}</a>, –≤—ã –≤–≤–µ–ª–∏ –∫–æ–º–∞–Ω–¥—É <b>-–ø–æ–º–æ—â—å</b>.\n–ü–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ —ç—Ç–æ–º—É –±–æ—Ç—É <a href = "https://teletype.in/@tanks_simulator/bot_functions">–∑–¥–µ—Å—å</a>""")
    elif message.text.lower() == Sellector+"—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"and message.chat.type == "private":
        bot.clear_step_handler_by_chat_id(chat_id=message.chat.id)
        if allowReg == False: 
             bot.send_message(message.chat.id, "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–∫—Ä—ã—Ç—ã!")
             return
        if functions.checkSession(conn=conn,telegramuserid=message.from_user.id) == True:
            bot.send_message(message.chat.id, "–í—ã —É–∂–µ –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç!")
            return
        bot.send_message(message.chat.id, "‚õîÔ∏è <b>–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—è—Å—å –≤ –±–æ—Ç–µ - –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º!</b>")
        registration_form = RegistrationForm(bot, message.chat.id, conn)
        registration_form.start()
    elif message.text.lower() == Sellector+"–ø—Ä–æ—Ñ–∏–ª—å":
        cur = conn.cursor()
        form = functions.checkSession(conn=conn,telegramuserid=message.from_user.id)
        if form == True:
                result = functions.GetAllInformationByID(conn=conn, id=message.from_user.id)
                if result['Inventory'] != None:
                    inventory = json.loads(result['Inventory'])
                    item_names = []
                    for item_id, quantity in inventory.items():
                        cur.execute(f"SELECT ItemName FROM Items WHERE ID = '{item_id}'")
                        item_result = cur.fetchone()
                        if item_result:
                            item_name = item_result['ItemName']
                            item_names.append(f"  üî∏ {item_name} (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {quantity})\n")

                    inventory_text = "".join(item_names) if item_names else "–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç"
                else: inventory_text = "–ü—É—Å—Ç–æ"

                bot.send_message(message.chat.id, f"""üóÇ <b>–õ–∏—á–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ –∏–≥—Ä–æ–∫–∞</b> <a href="tg://user?id={message.from_user.id}">{message.from_user.username}</a>:\n\nüñä <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –Ω–∏–∫</b>: <code>{result['UserName']}</code>\nüìå <b>ID</b>: <code>{result["ID"]}</code>\nüßß <b>–°—Ç–∞—Ç—É—Å</b>: <code>{result['Status']}</code>\n\nüõí <b>–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å</b>:\n{inventory_text}\nüìó <b>–î–∞—Ç–∞ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</b>: <code>{result["DataRegistration"]}</code>""")
        elif form == "LogIn required":
                bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, –ª–∏–±–æ –≤–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç.")
    elif message.text.lower() == Sellector+"–ª–æ–≥–∏–Ω" and message.chat.type == "private":
        bot.clear_step_handler_by_chat_id(chat_id=message.chat.id)
        if allowReg == False: 
            bot.send_message(message.chat.id, "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–∫—Ä—ã—Ç—ã!")
            return
        if functions.checkSession(conn=conn,telegramuserid=message.from_user.id) == True:
            bot.send_message(message.chat.id, "–í—ã —É–∂–µ –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç!")
            return
        bot.send_message(message.chat.id, "–õ–æ–≥–∏–Ω—è—Å—å –≤ –±–æ—Ç–µ - –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º!")
        registration_form = LoginForm(bot, message.chat.id, conn)
        registration_form.start()
    elif message.text.lower().startswith(Sellector+"–±–∞–Ω"):
        args = message.text.split()
        if len(args) >= 3:
            func = functions.banUser(conn=conn,UserID=args[1])
            if func == False:
                bot.send_message(message.chat.id, "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            else:
                button = telebot.types.InlineKeyboardButton('–ü–æ–¥—Ä–æ–±–Ω–µ–µ', url='https://teletype.in/@tanks_simulator/ban-reasons')
                markup = telebot.types.InlineKeyboardMarkup()
                markup.add(button)
                bot.send_message(func, f"‚õîÔ∏è <code>–°—Ç–æ–ø-—Å—Ç–æ–ø</code>\n<b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é - —Ç–µ–ø–µ—Ä—å –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω. </b>\n<code>–ü—Ä–∏—á–∏–Ω–∞: {' '.join(args[2:])}</code>",reply_markup=markup)
        else:
            bot.send_message(message.chat.id, "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ–º–∞–Ω–¥—ã")
    elif message.text.lower().startswith(Sellector+"–∞–Ω–±–∞–Ω"):
        args = message.text.split()
        if len(args) == 2:
            func = functions.unbanUser(conn=conn,UserID=args[1])
            if func == False:
                bot.send_message(message.chat.id, "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            else:
                bot.send_message(func, "‚úÖ <code>–ü–æ–≤–µ–∑–ª–æ-–ü–æ–≤–µ–∑–ª–æ</code>\n<b>–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.</b>")
        else:
            bot.send_message(message.chat.id, "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ–º–∞–Ω–¥—ã")
bot.polling()